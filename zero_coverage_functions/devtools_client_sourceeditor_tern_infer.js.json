["ConditionalExpression", "exports.inferExprVisitor.BinaryExpression<", "ClassDeclaration", "hasType", "BinaryExpression", "inferClass/<", "exports.inferExprVisitor.AssignmentExpression<", "exports.parentNode", "exports.inferExprVisitor.ObjectExpression</<", "exports.inferExprVisitor.Super<", "exports.Type", "c", "exports.inferExprVisitor.LogicalExpression<", "computeReturnType", "FunctionExpression", "generatorResult", "FunctionDeclaration", "getThis", "ObjectExpression", "ArrowFunctionExpression", "exports.inferExprVisitor.UnaryExpression<", "maybeInstantiate", "propHint", "VariableDeclaration", "Function", "ForOfStatement", "toString/<", "NewExpression", "exports.inferExprVisitor.FunctionExpression<", "inferClass", "TaggedTemplateExpression", "setFunctionInstantiated/fn.computeRet/<", "loopPattern", "propagatesTo", "getSymbolType", "maybeAddPhantomObj", "exports.typeFinder.Super<", "RestElement", "guessProperties", "binopIsBoolean", "exports.scopeAt/found<", "maybeTagAsGeneric", "connectParams", "exports.inferExprVisitor.ObjectExpression<", "ThisExpression", "exports.inferExprVisitor.YieldExpression<", "VariablePattern", "maybeTagAsInstantiated", "maybeUnregProtoPropHandler", "exports.scopeAt", "exports.getSymbol", "removeProp", "setFunctionInstantiated/fn.computeRet", "YieldExpression", "exports.inferExprVisitor.SequenceExpression<", "exports.forAllLocalsAt", "BlockStatement", "objsWithProp", "VariableDeclarator", "exports.Sym", "exports.inferExprVisitor.AssignmentExpression</<", "exports.withTimeout", "functionScope", "withSuper", "exports.findPropRefs", "isBlockScopedDecl", "exports.inferExprVisitor.ThisExpression<", "defVar", "AssignmentExpression", "typeHint", "AssignmentPattern", "exports.findExpressionAt/test<", "asPropName", "patternName/<", "ImportDeclaration", "ForInStatement", "symbolName", "patternName", "nodeSmallerThan", "connectPattern", "explore", "exports.simplifyTypes", "exports.inferExprVisitor.CallExpression<", "normalizeIntegerProp", "TryStatement", "maybeIterator", "Property", "getFunctionType", "MemberExpression", "ensureVar", "makeupPropType", "ClassExpression", "ensureMaybeProps", "similarType/<", "withDisabledComputing", "join", "maybeTagAsGeneric/fn.computeRet<", "unopResultType", "UpdateExpression", "exports.typeFromContext/type<", "ImportDefaultSpecifier", "ImportSpecifier", "exports.findRefs/refFindWalker.VariablePattern", "patternScopes", "SequenceExpression", "ImportNamespaceSpecifier", "exports.findRefs", "similarType", "exports.typeFromContext", "TemplateLiteral", "ForStatement", "canonicalType", "exports.inferExprVisitor.NewExpression<", "makeupType", "exports.TimedOut", "UnaryExpression", "ObjectPattern", "replaceProto", "setFunctionInstantiated", "exports.inferExprVisitor.TemplateLiteral<", "findByPropertyName", "similarAVal", "exports.inferExprVisitor.TaggedTemplateExpression<", "ReturnStatement", "exports.inferExprVisitor.UpdateExpression<", "LogicalExpression", "unregPropHandler", "CallExpression", "ArrayPattern", "exports.inferExprVisitor.ConditionalExpression<", "addVar"]